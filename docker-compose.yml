services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USER_DIRECT}
      POSTGRES_PASSWORD: ${DB_PASSWORD_DIRECT}
      POSTGRES_DB: ${DB_NAME_DIRECT}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DB_HOST_DIRECT: db
      DB_PORT_DIRECT: 5432
      DB_PORT_POOLED: 5432
      DB_NAME_DIRECT: ${DB_NAME_DIRECT}
      DB_USER_DIRECT: ${DB_USER_DIRECT}
      DB_PASSWORD_DIRECT: ${DB_PASSWORD_DIRECT}

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      
  pipeline-api:
    build:
      context: .
      dockerfile: ./pipeline/Dockerfile
    ports:
      - "8080:8000"  # Map to 8080 to avoid conflict with backend service
    volumes:
      - ./pipeline:/app/pipeline
      - ./pipeline/data:/app/pipeline/data
      - ./pipeline/config:/app/pipeline/config
      - ./pipeline/pipeline_output:/app/pipeline/pipeline_output
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped

volumes:
  db_data:
