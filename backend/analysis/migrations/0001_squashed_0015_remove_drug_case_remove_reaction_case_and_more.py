# Generated by Django 5.2.1 on 2025-10-24 14:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('analysis', '0001_squashed_0009_demo_valid_sex_choice_demo_valid_age_cod_choice_and_more'), ('analysis', '0010_alter_case_faers_caseid_alter_demo_age_and_more'), ('analysis', '0011_rename_x_values_query_ror_lower_and_more'), ('analysis', '0012_remove_query_quarter_start_lte_quarter_end_and_more'), ('analysis', '0013_result'), ('analysis', '0014_remove_query_ror_lower_remove_query_ror_upper_and_more'), ('analysis', '0015_remove_drug_case_remove_reaction_case_and_more')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faers_primaryid', models.BigIntegerField(unique=True)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2030)])),
                ('quarter', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('faers_caseid', models.BigIntegerField()),
            ],
            options={
                'ordering': ['year', 'quarter'],
            },
        ),
        migrations.CreateModel(
            name='DrugName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True, validators=[django.core.validators.MaxLengthValidator(255)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReactionName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True, validators=[django.core.validators.MaxLengthValidator(255)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.case')),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analysis.drugname')),
            ],
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.case')),
                ('reaction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='analysis.reactionname')),
            ],
        ),
        migrations.CreateModel(
            name='Demo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_dt_num', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(10)])),
                ('age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('age_cod', models.TextField(blank=True, choices=[('DEC', 'Decade'), ('YR', 'Year'), ('MON', 'Month'), ('WK', 'Week'), ('DY', 'Day'), ('HR', 'Hour')], null=True, validators=[django.core.validators.MaxLengthValidator(5)])),
                ('sex', models.TextField(blank=True, choices=[('UNK', 'Unknown'), ('M', 'Male'), ('F', 'Female'), ('U', 'Unspecified'), ('NS', 'Not Specified')], null=True, validators=[django.core.validators.MaxLengthValidator(5)])),
                ('wt', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('wt_cod', models.TextField(blank=True, choices=[('KG', 'Kilograms'), ('LBS', 'Pounds'), ('GMS', 'Grams')], null=True, validators=[django.core.validators.MaxLengthValidator(5)])),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.case')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('sex__in', ['UNK', 'M', 'F', 'U', 'NS'])), name='valid_sex_choice'), models.CheckConstraint(condition=models.Q(('age_cod__in', ['DEC', 'YR', 'MON', 'WK', 'DY', 'HR'])), name='valid_age_cod_choice'), models.CheckConstraint(condition=models.Q(('wt_cod__in', ['KG', 'LBS', 'GMS'])), name='valid_wt_cod_choice')],
            },
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outc_cod', models.TextField(choices=[('DE', 'Death'), ('LT', 'Life-Threatening'), ('HO', 'Hospitalization - Initial or Prolonged'), ('DS', 'Disability'), ('CA', 'Congenital Anomaly'), ('RI', 'Required Intervention to Prevent Permanent Impairment/Damage'), ('OT', 'Other Serious (Important Medical Event)')], null=True, validators=[django.core.validators.MaxLengthValidator(5)])),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.case')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('outc_cod__in', ['DE', 'LT', 'HO', 'DS', 'CA', 'RI', 'OT'])), name='valid_outc_cod_choice')],
            },
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, validators=[django.core.validators.MaxLengthValidator(255)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quarter_start', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('quarter_end', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('x_values', models.JSONField(default=list)),
                ('y_values', models.JSONField(default=list)),
                ('drugs', models.ManyToManyField(to='analysis.drugname')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reactions', models.ManyToManyField(to='analysis.reactionname')),
                ('year_end', models.IntegerField(validators=[django.core.validators.MinValueValidator(2004), django.core.validators.MaxValueValidator(2025)])),
                ('year_start', models.IntegerField(validators=[django.core.validators.MinValueValidator(2004), django.core.validators.MaxValueValidator(2025)])),
            ],
            options={
                'ordering': ['-updated_at'],
                'constraints': [models.CheckConstraint(condition=models.Q(('quarter_start__lte', models.F('quarter_end'))), name='quarter_start_lte_quarter_end')],
            },
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['year', 'quarter'], name='analysis_ca_year_4d8f93_idx'),
        ),
        migrations.AddConstraint(
            model_name='demo',
            constraint=models.CheckConstraint(condition=models.Q(('age_cod__isnull', True), models.Q(('age_cod', 'DEC'), ('age__lte', 12)), models.Q(('age_cod', 'YR'), ('age__lte', 120)), models.Q(('age_cod', 'MON'), ('age__lte', 1440)), models.Q(('age_cod', 'WK'), ('age__lte', 6240)), models.Q(('age_cod', 'DY'), ('age__lte', 43800)), models.Q(('age_cod', 'HR'), ('age__lte', 1051200)), _connector='OR'), name='valid_age_for_age_code'),
        ),
        migrations.RenameField(
            model_name='query',
            old_name='x_values',
            new_name='ror_lower',
        ),
        migrations.RenameField(
            model_name='query',
            old_name='y_values',
            new_name='ror_upper',
        ),
        migrations.AddField(
            model_name='query',
            name='ror_values',
            field=models.JSONField(default=list),
        ),
        migrations.RemoveConstraint(
            model_name='query',
            name='quarter_start_lte_quarter_end',
        ),
        migrations.AddConstraint(
            model_name='query',
            constraint=models.CheckConstraint(condition=models.Q(('year_start__lte', models.F('year_end'))), name='year_start_lte_year_end'),
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.TextField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending')),
                ('ror_values', models.JSONField(default=list)),
                ('ror_lower', models.JSONField(default=list)),
                ('ror_upper', models.JSONField(default=list)),
                ('query', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='analysis.query')),
            ],
        ),
        migrations.RemoveField(
            model_name='query',
            name='ror_lower',
        ),
        migrations.RemoveField(
            model_name='query',
            name='ror_upper',
        ),
        migrations.RemoveField(
            model_name='query',
            name='ror_values',
        ),
        migrations.RemoveField(
            model_name='drug',
            name='case',
        ),
        migrations.RemoveField(
            model_name='reaction',
            name='case',
        ),
        migrations.RemoveField(
            model_name='demo',
            name='case',
        ),
        migrations.RemoveField(
            model_name='drug',
            name='drug',
        ),
        migrations.RemoveField(
            model_name='reaction',
            name='reaction',
        ),
        migrations.DeleteModel(
            name='Outcome',
        ),
        migrations.DeleteModel(
            name='Case',
        ),
        migrations.DeleteModel(
            name='Demo',
        ),
        migrations.DeleteModel(
            name='Drug',
        ),
        migrations.DeleteModel(
            name='Reaction',
        ),
    ]
